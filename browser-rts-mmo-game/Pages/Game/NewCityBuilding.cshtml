@page "{id:int}"
@using BrowserGame.ModelUtils
@using BrowserGame.Models
@using BrowserGame.Static
@model BrowserGame.Pages.Game.NewCityBuildingModel

@{
    var cityManager = (ICityManager)ViewData["CityManager"];
}

<partial name="./Shared/_CommonGameNavigation" view-data="ViewData" />

<table class="table">
    <thead>
        <tr>
            <th>
                Building Name
            </th>
            <th>
                Cost
            </th>
            <th>
                Build duration
            </th>
            <th></th>
        </tr>
    </thead>
    <tbody>
@foreach (CityBuildingType cityBuildingType in Model.AvailableCityBuildings) {
            var buildingInfo = await Model.BuildingInfoFactory.CreateNewBuildingInfoAsync(cityBuildingType);
            <tr>
            <td>
                @buildingInfo.BuildingName
            </td>
            <td>
                <div class="text-@HtmlColors.Clay">@buildingInfo.ClayCost</div>
                <div class="text-@HtmlColors.Iron">@buildingInfo.IronCost</div>
                <div class="text-@HtmlColors.Wood">@buildingInfo.WoodCost</div>
                <div class="text-@HtmlColors.Crop">@buildingInfo.CropCost</div>
            </td>
            <td>
                @buildingInfo.GetBuildDuration(cityManager).ToHtmlDisplay()
            </td>
            <td>
                <form method="post">
                    <div class="form-group">
                        <input type="hidden" name="CityBuildingType" value="@cityBuildingType" />
                        <input type="submit" value="Build" class="btn btn-primary" @(await buildingInfo.CanBeBuiltAsync(cityManager) ? "" : "disabled")/>
                    </div>
                </form>
            </td>
        </tr>
}
    </tbody>
</table>


<partial name="./Shared/_CommonBuildProgress" view-data="ViewData"/>