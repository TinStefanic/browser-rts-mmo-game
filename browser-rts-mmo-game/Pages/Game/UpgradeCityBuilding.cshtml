@page "{id:int}"
@using BrowserGame.Models
@using BrowserGame.ModelUtils
@using BrowserGame.Utilities
@model BrowserGame.Pages.Game.UpgradeCityBuildingModel
@inject IHtmlColors HtmlColors
@inject ApplicationDbContext DbContext

@{
    var city = (City)ViewData["City"];
    var cityBuilding = (CityBuilding)ViewData["CityBuilding"];
    var upgrade = (Upgrade)ViewData["Upgrade"];
    
    var buildingConstructor = new BuildingConstructor(city, DbContext);
    var span = TimeSpan.FromSeconds(city.GetBuildTimeInSeconds(upgrade));

    var postButtonDisabled = await buildingConstructor.CanUpgradeAsync(upgrade) ? "" : "disabled";
}

<partial name="./Shared/_CommonGameNavigation" view-data="ViewData" />

@if (upgrade.IsFinnalUpgrade)
{
    <div class="text-center">
        Building is fully upgraded!
    </div>
}
else
{
    <div class="text-center">
        <div><h2>@cityBuilding.Name lvl. @cityBuilding.Level</h2></div>
        @if (cityBuilding.IsUpgradeInProgress) {
            <div>Upgrade in progress.</div>
        }
        else
        {
        <div>Cost to upgrade: </div>
        <div>
            <span class="text-@HtmlColors.Clay">@upgrade.ClayCost</span>
            <span class="text-@HtmlColors.Iron">@upgrade.IronCost</span>
            <span class="text-@HtmlColors.Wood">@upgrade.WoodCost</span>
            <span class="text-@HtmlColors.Crop">@upgrade.CropCost</span>
        </div>
        <div>
          Additional crop upkeep @upgrade.AdditionalCropUpkeep
        </div>
        <div>
            @cityBuilding.CityBuildingType.Description()
        </div>
        <div>
            Current @cityBuilding.CityBuildingType.ValueDescription().FirstCharToLower(): 
            <span class="text-info">@cityBuilding.Value</span> <br>

            @cityBuilding.CityBuildingType.ValueDescription() after upgrade: 
            <span class="text-info">@(upgrade.ValueChangeDecimal + cityBuilding.Value)</span>.
        </div>
        <div>
        Build time: @span.Days day@(span.Days == 1 ? "" : "s"), @span.Hours hour@(span.Hours == 1 ? "" : "s"),
        @span.Minutes minute@(span.Minutes == 1 ? "" : "s") and @span.Seconds second@(span.Seconds == 1 ? "" : "s").
        </div>
         <form method="post">
            <div class="form-group">
                <input type="hidden" name="CityBuildingId" value="@cityBuilding.Id" />
                <input type="submit" value="Upgrade" class="btn btn-primary" @postButtonDisabled />
            </div>
        </form>
        }
    </div>
}


<partial name="./Shared/_CommonBuildProgress" view-data="ViewData"/>